agent:
  config:
    exporters:
      splunk_hec/enterprise_logs:
        token: d7d0a57a-431f-49fe-80af-c7312ec9f352
        endpoint: https://splunk.notsplunksecuritytshirtco.com:8088
        source: otel
        index: tshirt-store
        tls: 
          insecure_skip_verify: true
      otlp:
        endpoint: splunk-otel-collector:4317
        tls:
          insecure: true
      signalfx:
        access_token: ${SPLUNK_OBSERVABILITY_ACCESS_TOKEN}
        api_url: http://splunk-otel-collector:6060
        correlation: null
        ingest_url: http://splunk-otel-collector:9943
        sync_host_metadata: true
    extensions:
      health_check: null
      k8s_observer:
        auth_type: serviceAccount
        node: ${K8S_NODE_NAME}
      memory_ballast:
        size_mib: ${SPLUNK_BALLAST_SIZE_MIB}
      zpages: null
    processors:
      batch: null
      filter/logs:
        logs:
          exclude:
            match_type: strict
            resource_attributes:
            - key: splunk.com/exclude
              value: 'true'
      resource/logs:
        attributes:
        - action: upsert
          from_attribute: k8s.pod.annotations.splunk.com/sourcetype
          key: com.splunk.sourcetype
        - action: delete
          key: k8s.pod.annotations.splunk.com/sourcetype
        - action: delete
          key: splunk.com/exclude
      groupbyattrs/logs:
        keys:
        - com.splunk.source
        - com.splunk.sourcetype
        - container.id
        - fluent.tag
        - istio_service_name
        - k8s.container.name
        - k8s.namespace.name
        - k8s.pod.name
        - k8s.pod.uid
      k8sattributes:
        extract:
          annotations:
          - from: pod
            key: splunk.com/sourcetype
          - from: namespace
            key: splunk.com/exclude
            tag_name: splunk.com/exclude
          - from: pod
            key: splunk.com/exclude
            tag_name: splunk.com/exclude
          - from: namespace
            key: splunk.com/index
            tag_name: com.splunk.index
          - from: pod
            key: splunk.com/index
            tag_name: com.splunk.index
          labels:
          - key: app
          metadata:
          - k8s.namespace.name
          - k8s.node.name
          - k8s.pod.name
          - k8s.pod.uid
          - container.id
          - container.image.name
          - container.image.tag
        filter:
          node_from_env_var: K8S_NODE_NAME
        passthrough: true
        pod_association:
        - sources:
          - from: resource_attribute
            name: k8s.pod.uid
        - sources:
          - from: resource_attribute
            name: k8s.pod.ip
        - sources:
          - from: resource_attribute
            name: ip
        - sources:
          - from: connection
        - sources:
          - from: resource_attribute
            name: host.name
      memory_limiter:
        check_interval: 2s
        limit_mib: ${SPLUNK_MEMORY_LIMIT_MIB}
      resource:
        attributes:
        - action: insert
          key: k8s.node.name
          value: ${K8S_NODE_NAME}
        - action: upsert
          key: k8s.cluster.name
          value: crossfunctional-eks
      resource/add_agent_k8s:
        attributes:
        - action: insert
          key: k8s.pod.name
          value: ${K8S_POD_NAME}
        - action: insert
          key: k8s.pod.uid
          value: ${K8S_POD_UID}
        - action: insert
          key: k8s.namespace.name
          value: ${K8S_NAMESPACE}
      resource/add_environment:
        attributes:
        - action: insert
          key: deployment.environment
          value: crossfunctional-eks
      resourcedetection:
        detectors:
        - env
        - eks
        - ec2
        - system
        override: true
        timeout: 10s
    receivers:
      fluentforward:
        endpoint: 0.0.0.0:8006
      hostmetrics:
        collection_interval: 10s
        scrapers:
          cpu: null
          disk: null
          filesystem: null
          load: null
          memory: null
          network: null
          paging: null
          processes: null
      jaeger:
        protocols:
          grpc:
            endpoint: 0.0.0.0:14250
          thrift_http:
            endpoint: 0.0.0.0:14268
      kubeletstats:
        auth_type: serviceAccount
        collection_interval: 10s
        endpoint: ${K8S_NODE_IP}:10250
        extra_metadata_labels:
        - container.id
        metric_groups:
        - container
        - pod
        - node
      otlp:
        protocols:
          grpc:
            endpoint: 0.0.0.0:4317
          http:
            endpoint: 0.0.0.0:4318
      prometheus/agent:
        config:
          scrape_configs:
          - job_name: otel-agent
            scrape_interval: 10s
            static_configs:
            - targets:
              - ${K8S_POD_IP}:8889
      receiver_creator:
        receivers:
          smartagent/mongodb:
            config:
              databases:
              - admin
              - O11y
              - local
              - config
              host: mongodb.default.svc.cluster.local
              port: 27017
              sendCollectionMetrics: true
              sendCollectionTopMetrics: true
              type: collectd/mongodb
            rule: type == "pod" && name matches "mongodb-"
        watch_observers:
        - k8s_observer
      signalfx:
        endpoint: 0.0.0.0:9943
      smartagent/signalfx-forwarder:
        listenAddress: 0.0.0.0:9080
        type: signalfx-forwarder
      zipkin:
        endpoint: 0.0.0.0:9411
    service:
      extensions:
      - health_check
      - k8s_observer
      - memory_ballast
      - zpages
      pipelines:
        logs/enterprise:
          receivers:
          - otlp
          - fluentforward
          processors:
          - batch
          - filter/logs
          - groupbyattrs/logs
          - resource/logs
          - k8sattributes
          - memory_limiter
          - resource
          - resourcedetection
          - resource/add_environment
          exporters:
          - splunk_hec/enterprise_logs
        logs:
          exporters:
          - otlp
          processors:
          - memory_limiter
          - groupbyattrs/logs
          - k8sattributes
          - batch
          - resourcedetection
          - resource
          - resource/add_environment
          receivers:
          - fluentforward
          - otlp
        metrics:
          exporters:
          - otlp
          processors:
          - memory_limiter
          - batch
          - resourcedetection
          - resource
          receivers:
          - hostmetrics
          - kubeletstats
          - otlp
          - receiver_creator
          - signalfx
        metrics/agent:
          exporters:
          - signalfx
          processors:
          - memory_limiter
          - batch
          - resource/add_agent_k8s
          - resourcedetection
          - resource
          receivers:
          - prometheus/agent
        traces:
          exporters:
          - otlp
          - signalfx
          processors:
          - memory_limiter
          - k8sattributes
          - batch
          - resourcedetection
          - resource
          - resource/add_environment
          receivers:
          - otlp
          - jaeger
          - smartagent/signalfx-forwarder
          - zipkin
      telemetry:
        metrics:
          address: 0.0.0.0:8889
  resources:
    limits:
      cpu: 400m
      memory: 2Gi
cloudProvider: aws
clusterName: crossfunctional-eks
clusterReceiver:
  config:
    receivers:
      kafkametrics:
        brokers: kafka:9092
        collection_interval: 10s
        protocol_version: 2.0.0
        scrapers:
        - brokers
        - topics
        - consumers
    service:
      pipelines:
        metrics:
          receivers:
          - k8s_cluster
          - kafkametrics
  k8sEventsEnabled: true
distribution: eks
environment: crossfunctional-eks
gateway:
  enabled: true
  replicaCount: 1
  resources:
    limits:
      cpu: 500m
      memory: 2Gi
splunkObservability:
  logsEnabled: true
